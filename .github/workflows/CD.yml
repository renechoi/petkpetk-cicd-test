# workflow의 이름
name: CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.

# 해당 yml 내에서 사용할 key - value
env:
  S3_BUCKET_NAME: petkpetk-bucket
  PROJECT_NAME: petkpetk

# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  admin-build:
    name: admin build
    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
    runs-on: ubuntu-latest
    env:
      SERVER_PORT: 8080
      AWS_DB_URL: ${{ secrets.AWS_DB_URL }}
      AWS_DB_USERNAME: ${{ secrets.AWS_DB_USERNAME }}
      AWS_DB_PASSWORD: ${{ secrets.AWS_DB_PASSWORD }}
      GOOGLE_SMTP_USERNAME: ${{ secrets.GOOGLE_SMTP_USERNAME }}
      GOOGLE_SMTP_PASSWORD: ${{ secrets.GOOGLE_SMTP_PASSWORD }}

    steps:
      # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11.0.18'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x admin/gradlew
        shell: bash

      - name: Build with Gradle
        run: cd admin && ./gradlew build -x test
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Replace secrets in application-prod.yml
        run: |
          sed -i "s/\${AWS_DB_USERNAME}/${AWS_DB_USERNAME}/g" admin/src/main/resources/application-prod.yml
          sed -i "s/\${AWS_DB_PASSWORD}/${AWS_DB_PASSWORD}/g" admin/src/main/resources/application-prod.yml
          sed -i "s/\${GOOGLE_SMTP_USERNAME}/${GOOGLE_SMTP_USERNAME}/g" admin/src/main/resources/application-prod.yml
          sed -i "s/\${GOOGLE_SMTP_PASSWORD}/${GOOGLE_SMTP_PASSWORD}/g" admin/src/main/resources/application-prod.yml
        shell: bash

        # Deploy
      - name: Deploy
        run: |
          aws deploy create-deployment \
          --application-name petkpetk \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name petkpetk-prod \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=petkpetk-bucket,bundleType=zip,key=petkpetk/$GITHUB_SHA.zip \
          --region ap-northeast-2 \