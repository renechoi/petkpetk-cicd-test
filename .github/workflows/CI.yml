## workflow의 이름
#name: CI
#
## 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
#on:
#  push:
#    branches: [ main ] # main branch로 push 될 때 실행됩니다.
#  pull_request:
#    branches: [ main ]  # main branch로 pull request될 때 실행됩니다.
#
## workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
#jobs:
#  admin-build:
#    name: admin Build
#    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
#    runs-on: ubuntu-latest
#
#    steps:
#      # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
#      - uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11.0.18'
#          distribution: 'adopt'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x admin/gradlew
#        shell: bash
#
#      - name: Build with Gradle
#        run: cd admin && ./gradlew build -x test
#        shell: bash
#
#  service-build:
#    name: service Build
#    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
#    runs-on: ubuntu-latest
#
#    steps:
#      # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
#      - uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11.0.18'
#          distribution: 'adopt'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x service/gradlew
#        shell: bash
#
#      - name: Build with Gradle
#        run: cd service && ./gradlew build -x test
#        shell: bash
#
#
#
#
#
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  admin-build:
    name: admin Build
    runs-on: ubuntu-latest
    env:
      SERVER_PORT: 8080
      AWS_DB_URL: ${{ secrets.AWS_DB_URL }}
      AWS_DB_USERNAME: ${{ secrets.AWS_DB_USERNAME }}
      AWS_DB_PASSWORD: ${{ secrets.AWS_DB_PASSWORD }}
      GOOGLE_SMTP_USERNAME: ${{ secrets.GOOGLE_SMTP_USERNAME }}
      GOOGLE_SMTP_PASSWORD: ${{ secrets.GOOGLE_SMTP_PASSWORD }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11.0.18'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x admin/gradlew
        shell: bash

      - name: Build with Gradle
        run: cd admin && ./gradlew build -x test
        shell: bash


      - name: Replace secrets in application.yml
        run: |
          sed -i "s/\${AWS_DB_USERNAME}/${AWS_DB_USERNAME}/g" admin/src/main/resources/application.yml
          sed -i "s/\${AWS_DB_PASSWORD}/${AWS_DB_PASSWORD}/g" admin/src/main/resources/application.yml
          sed -i "s/\${GOOGLE_SMTP_USERNAME}/${GOOGLE_SMTP_USERNAME}/g" admin/src/main/resources/application.yml
          sed -i "s/\${GOOGLE_SMTP_PASSWORD}/${GOOGLE_SMTP_PASSWORD}/g" admin/src/main/resources/application.yml
        shell: bash
